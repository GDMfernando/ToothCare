package views;

import db.ToothCareData;
import enums.ToothCareQueData;
import enums.TreatmentType;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Appointment;
import models.Doctor;
import models.Patient;
import models.Treatment;
import java.util.ArrayList;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author acer
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        appointmentIdLabel = new javax.swing.JLabel();
        appointmentIDTxtField = new javax.swing.JTextField();
        patientNameLabel = new javax.swing.JLabel();
        patientNameTextField = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        addressTextField = new javax.swing.JTextField();
        telephoneLabel = new javax.swing.JLabel();
        telephoneTextField = new javax.swing.JTextField();
        dateTimeLabel = new javax.swing.JLabel();
        dateTimeComboBox = new javax.swing.JComboBox<>();
        treatmentLabel = new javax.swing.JLabel();
        treatmentComboBox = new javax.swing.JComboBox<>();
        makeAppointmentButton = new javax.swing.JButton();
        doctorComboBox = new javax.swing.JComboBox<>();
        doctorLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        treatmenttypeComboBox = new javax.swing.JComboBox<>();
        treatmenttypeLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        findbydateLabel = new javax.swing.JLabel();
        findBydateTxtfield = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        searchDataTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        appointmentsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        appointmentIdLabel.setText("Appointment ID :");

        appointmentIDTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointmentIDTxtFieldActionPerformed(evt);
            }
        });

        patientNameLabel.setText("Patient Name :");

        patientNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientNameTextFieldActionPerformed(evt);
            }
        });

        addressLabel.setText("Address :");

        addressTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTextFieldActionPerformed(evt);
            }
        });

        telephoneLabel.setText("Telephone :");

        telephoneTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telephoneTextFieldActionPerformed(evt);
            }
        });

        dateTimeLabel.setText("Date & Time :");

        dateTimeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monday 06.00pm - 09.00pm", "Wednesday 06.00pm - 09.00pm", "Saturday 03.00pm - 10.00pm", "Sunday 03.00pm - 10.00pm" }));
        dateTimeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTimeComboBoxActionPerformed(evt);
            }
        });

        treatmentLabel.setText("Treatment Type :");

        treatmentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cleaning", "Whitening", "Filling", "NerveFilling", "RootCanalTherapy" }));
        treatmentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmentComboBoxActionPerformed(evt);
            }
        });

        makeAppointmentButton.setText("Make Appointment");
        makeAppointmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeAppointmentButtonActionPerformed(evt);
            }
        });

        doctorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tommy", "Tony" }));
        doctorComboBox.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                doctorComboBoxComponentRemoved(evt);
            }
        });
        doctorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorComboBoxActionPerformed(evt);
            }
        });

        doctorLabel.setText("Doctor :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(appointmentIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateTimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(appointmentIDTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(telephoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(telephoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(treatmentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doctorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(treatmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doctorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(makeAppointmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(appointmentIDTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(appointmentIdLabel))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientNameLabel))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLabel)
                    .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telephoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telephoneLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateTimeLabel)
                    .addComponent(dateTimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(treatmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(treatmentLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doctorLabel))
                .addGap(18, 18, 18)
                .addComponent(makeAppointmentButton)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        viewPane.addTab("Appointment", jPanel1);

        treatmenttypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cleanings", "Whitening", "Filling", "Nerve Filling", "Root Canal Therapy" }));
        treatmenttypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmenttypeComboBoxActionPerformed(evt);
            }
        });

        treatmenttypeLabel.setText("Treatment Type :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addComponent(treatmenttypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(treatmenttypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(treatmenttypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(treatmenttypeLabel))
                .addContainerGap(336, Short.MAX_VALUE))
        );

        viewPane.addTab("Payment", jPanel2);

        findbydateLabel.setText("Find by Date ");

        findBydateTxtfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findBydateTxtfieldActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        searchDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name ", "Address", "Telephone", "Date & Time", "Treatment Type", "Doctor"
            }
        ));
        jScrollPane2.setViewportView(searchDataTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(findbydateLabel)
                .addGap(18, 18, 18)
                .addComponent(findBydateTxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findbydateLabel)
                    .addComponent(findBydateTxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        viewPane.addTab("Search", jPanel3);

        appointmentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Address", "Telephone", "Date & Time", "Treatment Type", "Doctor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(appointmentsTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        viewPane.addTab("View", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewPane, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(viewPane, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        viewPane.getAccessibleContext().setAccessibleName("Appointment");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed

        String searchDate = findBydateTxtfield.getText();

        if (searchDate.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a date to search for appointments.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        ToothCareData toothCareData = ToothCareData.getInstance();
        ToothCareQueData appointmentQueue = toothCareData.findbyDate(searchDate);

  if (appointmentQueue != null && !appointmentQueue.getQueList().isEmpty()) {
            // Display appointments in the searchDataTable
            displayAppointmentsInTable(appointmentQueue.getQueList(), searchDataTable);
        } else {
            JOptionPane.showMessageDialog(this, "No appointments found for " + searchDate + ".", "No Appointments", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void displayAppointmentsInTable(ArrayList<Appointment> appointments, javax.swing.JTable table) {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Appointment ID");
        model.addColumn("Patient Name");
        model.addColumn("Address");
        model.addColumn("Telephone");
        model.addColumn("Date and Time");
        model.addColumn("Treatment Type");
        model.addColumn("Doctor");

        for (Appointment appointment : appointments) {
            Object[] rowData = {
                appointment.getAppoid(),
                appointment.getPatient().getFullname(),
                appointment.getPatient().getAddress(),
                appointment.getPatient().getMobileno(),
                appointment.getDate(),
                appointment.getTreatment().getName(),
                appointment.getDoc().getAcadamics()
            };
            model.addRow(rowData);
        }

        table.setModel(model);
    }
    private void findBydateTxtfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findBydateTxtfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findBydateTxtfieldActionPerformed

    private void treatmenttypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmenttypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_treatmenttypeComboBoxActionPerformed

    private void doctorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorComboBoxActionPerformed

    private void doctorComboBoxComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_doctorComboBoxComponentRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorComboBoxComponentRemoved

    private void makeAppointmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeAppointmentButtonActionPerformed
        try {
            int appointmentID = Integer.parseInt(appointmentIDTxtField.getText());
            String patientName = patientNameTextField.getText();
            String address = addressTextField.getText();
            String telephone = telephoneTextField.getText();
            String dateTime = (String) dateTimeComboBox.getSelectedItem();
            String treatmentType = (String) treatmentComboBox.getSelectedItem();
            String selectedDoctorName = (String) doctorComboBox.getSelectedItem();

            // Validate input fields
            if (appointmentID <= 0) {
                JOptionPane.showMessageDialog(this, "Please enter a valid Appointment ID.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (patientName.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter Patient Name.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (address.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter Address.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (telephone.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter Telephone.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            TreatmentType treatmentTypeEnum = TreatmentType.valueOf(treatmentType);
            Doctor doctor = new Doctor(selectedDoctorName);
            Patient patient = new Patient(patientName, "", telephone, address);
            Treatment treatment = new Treatment(treatmentTypeEnum.getName(), treatmentTypeEnum.getPrice());
            Appointment appointment = new Appointment(appointmentID, dateTime, doctor, patient, treatment);

            ToothCareData toothCareData = ToothCareData.getInstance();
            toothCareData.addAppointment(appointment);

            DefaultTableModel model = (DefaultTableModel) appointmentsTable.getModel();
            Object[] rowData = {appointmentID, patientName, address, telephone, dateTime, treatmentType, selectedDoctorName};
            model.addRow(rowData);

            JOptionPane.showMessageDialog(this, "Appointment added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

            clearFormFields();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Appointment ID.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_makeAppointmentButtonActionPerformed

    private void treatmentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmentComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_treatmentComboBoxActionPerformed

    private void dateTimeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTimeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTimeComboBoxActionPerformed

    private void telephoneTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telephoneTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telephoneTextFieldActionPerformed

    private void addressTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTextFieldActionPerformed

    private void patientNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientNameTextFieldActionPerformed

    private void appointmentIDTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointmentIDTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_appointmentIDTxtFieldActionPerformed

    private void clearFormFields() {
        appointmentIDTxtField.setText("");
        patientNameTextField.setText("");
        addressTextField.setText("");
        telephoneTextField.setText("");
        dateTimeComboBox.setSelectedIndex(0);
        treatmentComboBox.setSelectedIndex(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JTextField appointmentIDTxtField;
    private javax.swing.JLabel appointmentIdLabel;
    private javax.swing.JTable appointmentsTable;
    private javax.swing.JComboBox<String> dateTimeComboBox;
    private javax.swing.JLabel dateTimeLabel;
    private javax.swing.JComboBox<String> doctorComboBox;
    private javax.swing.JLabel doctorLabel;
    private javax.swing.JTextField findBydateTxtfield;
    private javax.swing.JLabel findbydateLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton makeAppointmentButton;
    private javax.swing.JLabel patientNameLabel;
    private javax.swing.JTextField patientNameTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JTable searchDataTable;
    private javax.swing.JLabel telephoneLabel;
    private javax.swing.JTextField telephoneTextField;
    private javax.swing.JComboBox<String> treatmentComboBox;
    private javax.swing.JLabel treatmentLabel;
    private javax.swing.JComboBox<String> treatmenttypeComboBox;
    private javax.swing.JLabel treatmenttypeLabel;
    private javax.swing.JTabbedPane viewPane;
    // End of variables declaration//GEN-END:variables
}
